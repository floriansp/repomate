#!/usr/bin/env ruby

require 'rubygems'
require 'slop'
require_relative '../lib/configuration'
require_relative '../lib/repomate/base'
require_relative '../lib/cli'
require_relative '../lib/server'

options = Slop.parse do
  banner "RepoMate (A simple debian repository management tool)"
  on :A, :add=, "Add a package to the staging area (full path to file)", :argument => true
  on :P, :publish, "Move a package from staging area to production"
  on :L, :load, "Load production links to a specific moment"
  on :S, :save, "Save production links"
  on :s, :suitename=, "Set the name of the suite (lenny/squeeze...)", :argument => true
  on :c, :component=, "Set the name of the component (main/contrib...)", :default => "main"
  on :l, :listpackages, "List packages in a suite"
  on :r, :repodir, "Type of pool", :argument => true
  on :force, "Force action", :default => false
  on :setup, "Setup directory structure"
  on :server, "Start Webserver", :argument => false
  on :h, :help, 'Print this help message', :tail => true do
    puts help
    exit
  end
end

cli = Cli.new

if options.add?
  cli.stage(options)
elsif options.publish?
  cli.publish
elsif options.load?
  cli.choose_checkpoint
elsif options.save?
  cli.save_checkpoint
elsif options.listpackages?
  cli.list_packagelist(options)
elsif options.setup?
  cli.setup(options)
elsif options.server?
  Server.run!
else
  puts options.help
end

